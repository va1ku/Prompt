{"version":3,"file":"static/js/842.cfb86ac3.chunk.js","mappings":"oLACA,GAAgB,QAAU,uBAAuB,aAAe,4BAA4B,kBAAoB,iCAAiC,cAAgB,6BAA6B,WAAa,0BAA0B,SAAW,wBAAwB,OAAS,uB,yCC2FjR,EAjFc,SAACA,GACd,IAKIC,EAAQ,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAUF,GAAY,YACpC,OACC,iBAAKG,UAAWC,EAAAA,kBAAhB,WACC,kCAAQC,KAAK,QAAWH,GAAWF,KACnC,SAAC,KAAD,CAAcM,KAAMJ,EAAMI,WAK7B,OAAIN,EAAMO,QACF,SAAC,KAAD,CAAUC,GAAG,cAIpB,gBAAKL,UAAWC,EAAAA,QAAhB,UACC,iBAAKD,UAAWC,EAAAA,aAAhB,WACC,sCACA,SAAC,KAAD,CAAQK,SAtBI,SAACC,EAAQC,GACvB,IAAMC,EAAsCF,EAAtCE,MAAOC,EAA+BH,EAA/BG,SAAUC,EAAqBJ,EAArBI,SAAUC,EAAWL,EAAXK,QACjCf,EAAMY,MAAMA,EAAOC,EAAUC,EAAUC,GACvCJ,EAAOK,eAAc,IAmBSC,cAAe,CAAEL,MAAO,GAAIC,SAAU,GAAIC,UAAU,EAAOC,QAAS,IAAhG,SACE,gBAAEG,EAAF,EAAEA,QAAQC,EAAV,EAAUA,OAAOC,EAAjB,EAAiBA,aAAcV,EAA/B,EAA+BA,OAAOW,EAAtC,EAAsCA,aAAtC,OACA,UAAC,KAAD,YACC,oCACA,SAAC,KAAD,CAAOf,KAAK,QACXH,UAAS,UAAKC,EAAAA,WAAL,YAA2Bc,EAAQN,OAASO,EAAOP,MAAQR,EAAAA,OAAiB,IACrFkB,SAAUF,EACVG,MAAOb,EAAOE,MACdY,UAAWvB,EACXwB,UAAUC,EAAAA,EAAAA,QAEX,uCACA,SAAC,KAAD,CACCvB,UAAS,UAAKC,EAAAA,WAAL,YAA2Bc,EAAQL,UAAYM,EAAON,SAAWT,EAAAA,OAAiB,IAC3FE,KAAK,WAAWD,KAAK,WACrBiB,SAAUF,EACVG,MAAOb,EAAOG,SACdW,UAAWvB,EACXwB,UAAUC,EAAAA,EAAAA,QAEX,yBAAM1B,EAAM2B,eACZ,SAAC,KAAD,CACCxB,UAAWC,EAAAA,SACXE,KAAK,WAAWD,KAAK,WACrBuB,QAASlB,EAAOI,SAChBQ,SAAUF,EACVI,UAAU,WACX,iBAAMK,MAAO,CAAEC,OAAQ,UAAvB,yBAEC9B,EAAMe,SACL,4BACD,gBAAKgB,IAAK/B,EAAMe,QAASiB,IAAI,MAC7B,SAAC,KAAD,CACA7B,UAAS,UAAKC,EAAAA,WAAL,YAA2Bc,EAAQH,SAAWI,EAAOJ,QAAUX,EAAAA,OAAiB,IACzFE,KAAK,UAAUD,KAAK,UACpBiB,SAAUF,EACVG,MAAOb,EAAOK,QACdS,UAAWvB,EACXwB,UAAUC,EAAAA,EAAAA,UAET,MAGF,gBAAKvB,UAAWC,EAAAA,cAAhB,UACC,mBAAQC,KAAK,SAASF,UAAWC,EAAAA,aAAsB6B,SAAUZ,EAAjE,mC,mBChER,GAAea,EAAAA,EAAAA,KATS,SAACC,GACxB,MAAM,CACLpB,QAASoB,EAAMC,KAAKrB,QACpBR,OAAQ4B,EAAMC,KAAK7B,OACnBoB,YAAaQ,EAAMC,KAAKT,eAKa,CAACf,MAAAA,EAAAA,IAAxC,CAAgDyB","sources":["webpack://my-app/./src/components/Login/Login.module.css?3530","components/Login/Login.jsx","components/Login/LoginContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Login_wrapper__6kgbh\",\"loginWrapper\":\"Login_loginWrapper__bVWxg\",\"loginInputWrapper\":\"Login_loginInputWrapper__QUXdP\",\"submitWrapper\":\"Login_submitWrapper__aGddh\",\"loginInput\":\"Login_loginInput__R1PXj\",\"checkbox\":\"Login_checkbox__+jZE+\",\"errors\":\"Login_errors__ec8uP\"};","import { ErrorMessage, Field, Form, Formik } from \"formik\"\r\nimport classes from \"./Login.module.css\"\r\nimport { Navigate } from \"react-router-dom\"\r\nimport { RequiredField } from \"../../utils/validators/validators\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Login = (props) => {\r\n\tlet onSubmit = (values, action) => {\r\n\t\tlet { login, password, remember, captcha} = values;\r\n\t\tprops.login(login, password, remember, captcha)\r\n\t\taction.setSubmitting(false)\r\n\t}\r\n\tlet Input = ({ field, ...props }) => {\r\n\t\treturn (\r\n\t\t\t<div className={classes.loginInputWrapper}>\r\n\t\t\t\t<input  type=\"text\" {...field} {...props} />\r\n\t\t\t\t<ErrorMessage name={field.name} />\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\r\n\tif (props.isAuth) {\r\n\t\treturn <Navigate to=\"/profile\" />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={classes.wrapper}>\r\n\t\t\t<div className={classes.loginWrapper}>\r\n\t\t\t\t<h1>Sign In </h1>\r\n\t\t\t\t<Formik onSubmit={onSubmit} initialValues={{ login: '', password: '', remember: false, captcha: ''}}>\r\n\t\t\t\t\t{({touched,errors,handleChange, values,isSubmitting}) => (\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<h2>login:</h2>\r\n\t\t\t\t\t\t\t<Field name='login'\r\n\t\t\t\t\t\t\t\tclassName={`${classes.loginInput} ${touched.login && errors.login ? classes.errors : \"\"}`}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tvalue={values.login}\r\n\t\t\t\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\t\t\t\tvalidate={RequiredField()} />\r\n\r\n\t\t\t\t\t\t\t<h2>password:</h2>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tclassName={`${classes.loginInput} ${touched.password && errors.password ? classes.errors : \"\"}`}\r\n\t\t\t\t\t\t\t\tname='password' type=\"password\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tvalue={values.password}\r\n\t\t\t\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\t\t\t\tvalidate={RequiredField()} />\r\n\r\n\t\t\t\t\t\t\t<div>{props.LoginErrors}</div>\r\n\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tclassName={classes.checkbox}\r\n\t\t\t\t\t\t\t\tname='remember' type=\"checkbox\"\r\n\t\t\t\t\t\t\t\tchecked={values.remember}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tcomponent=\"input\" />\r\n\t\t\t\t\t\t\t<span style={{ margin: \"0 10px\" }}>remember me</span>\r\n\r\n\t\t\t\t\t\t\t{props.captcha \r\n\t\t\t\t\t\t\t? <div>\r\n\t\t\t\t\t\t\t\t<img src={props.captcha} alt=\"\" />\r\n\t\t\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\t\t\tclassName={`${classes.loginInput} ${touched.captcha && errors.captcha ? classes.errors : \"\"}`}\r\n\t\t\t\t\t\t\t\tname='captcha' type=\"captcha\"\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tvalue={values.captcha}\r\n\t\t\t\t\t\t\t\tcomponent={Input}\r\n\t\t\t\t\t\t\t\tvalidate={RequiredField()} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t<div className={classes.submitWrapper}>\r\n\t\t\t\t\t\t\t\t<button type=\"submit\" className={classes.SubmitButton} disabled={isSubmitting}>\r\n\t\t\t\t\t\t\t\t\tSign In</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Formik>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default Login;","import Login from \"./Login\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth_reducer.js\";\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tcaptcha: state.auth.captcha,\r\n\t\tisAuth: state.auth.isAuth,\r\n\t\tLoginErrors: state.auth.LoginErrors,\r\n\t}\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,{login})(Login)"],"names":["props","Input","field","className","classes","type","name","isAuth","to","onSubmit","values","action","login","password","remember","captcha","setSubmitting","initialValues","touched","errors","handleChange","isSubmitting","onChange","value","component","validate","RequiredField","LoginErrors","checked","style","margin","src","alt","disabled","connect","state","auth","Login"],"sourceRoot":""}